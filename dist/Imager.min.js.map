{"version":3,"sources":["Imager.js"],"names":["global","factory","exports","module","require","define","amd","Imager","EXIF","this","classCallCheck","AwaitValue","value","AsyncGenerator","gen","send","key","arg","Promise","resolve","reject","request","next","back","front","resume","result","then","settle","done","err","type","_invoke","return","undefined","Symbol","asyncIterator","prototype","throw","instance","Constructor","TypeError","createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","protoProps","staticProps","assign","index","arguments","source","hasOwnProperty","call","opts","defaults","maxWidth","maxHeight","quality","isLimit","exifdata","Orientation","image","width","height","nw","nh","naturalWidth","naturalHeight","_this","Image","orientation","file","fileToBase64","base64","src","addEventListener","canvas","ctx","_expectSize","expectSize","document","createElement","getContext","drawImage","rotateImg","toDataURL","_this2","getData","getAllTags","window","FileReader","File","atob","Uint8Array","indexOf","dataurl","filename","supportFile","arr","split","mime","match","bstr","n","u8arr","charCodeAt","supportFileReader","Error","oReader","readAsDataURL","img","direction","step","degree","Math","PI","rotate"],"mappings":"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","file":"Imager.min.js","sourcesContent":["/*!\n * Imager v0.1.5\n * (c) 2020 321jiangtao@gmail.com\n * Released under the  License.\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('exif-js')) :\n  typeof define === 'function' && define.amd ? define(['exif-js'], factory) :\n  (global.Imager = factory(global.EXIF));\n}(this, (function (EXIF) { 'use strict';\n\nvar asyncGenerator = function () {\n  function AwaitValue(value) {\n    this.value = value;\n  }\n\n  function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg);\n        var value = result.value;\n\n        if (value instanceof AwaitValue) {\n          Promise.resolve(value.value).then(function (arg) {\n            resume(\"next\", arg);\n          }, function (arg) {\n            resume(\"throw\", arg);\n          });\n        } else {\n          settle(result.done ? \"return\" : \"normal\", result.value);\n        }\n      } catch (err) {\n        settle(\"throw\", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case \"return\":\n          front.resolve({\n            value: value,\n            done: true\n          });\n          break;\n\n        case \"throw\":\n          front.reject(value);\n          break;\n\n        default:\n          front.resolve({\n            value: value,\n            done: false\n          });\n          break;\n      }\n\n      front = front.next;\n\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    if (typeof gen.return !== \"function\") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) {\n    return this._invoke(\"next\", arg);\n  };\n\n  AsyncGenerator.prototype.throw = function (arg) {\n    return this._invoke(\"throw\", arg);\n  };\n\n  AsyncGenerator.prototype.return = function (arg) {\n    return this._invoke(\"return\", arg);\n  };\n\n  return {\n    wrap: function (fn) {\n      return function () {\n        return new AsyncGenerator(fn.apply(this, arguments));\n      };\n    },\n    await: function (value) {\n      return new AwaitValue(value);\n    }\n  };\n}();\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nif (typeof Object.assign != 'function') {\n    Object.assign = function (target) {\n        'use strict';\n\n        if (target == null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        target = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source != null) {\n                for (var key in source) {\n                    if (Object.prototype.hasOwnProperty.call(source, key)) {\n                        target[key] = source[key];\n                    }\n                }\n            }\n        }\n        return target;\n    };\n}\n\nvar Imager = function () {\n    function Imager(opts) {\n        classCallCheck(this, Imager);\n\n        var defaults = {\n            maxWidth: 1000,\n            maxHeight: 1000,\n            quality: 0.9,\n            isLimit: true, // 是否限制宽高\n            exifdata: {\n                Orientation: ''\n            }\n\n        };\n\n        Object.assign(this, defaults, opts);\n    }\n\n    createClass(Imager, [{\n        key: 'expectSize',\n        value: function expectSize(image) {\n            var width = void 0,\n                height = void 0,\n                nw = void 0,\n                nh = void 0;\n            var maxWidth = this.maxWidth,\n                maxHeight = this.maxHeight;\n\n\n            width = nw = image.naturalWidth;\n            height = nh = image.naturalHeight;\n\n            if (this.isLimit) {\n                if (nw > nh && nw > maxWidth) {\n                    width = maxWidth;\n                    height = width * nh / nw;\n                } else if (nh > nw && nh > maxHeight) {\n                    height = maxHeight;\n                    width = height * nw / nh;\n                }\n            }\n            return { width: width, height: height };\n        }\n    }, {\n        key: 'loaded',\n        value: function loaded() {\n            var _this = this;\n\n            var image = new Image();\n            var maxWidth = this.maxWidth;\n            var maxHeight = this.maxHeight;\n            var orientation = this.file.exifdata.Orientation;\n            var quality = this.quality;\n            return Imager.fileToBase64(this.file).then(function (base64) {\n                image.src = base64;\n                return new Promise(function (resolve, reject) {\n                    image.addEventListener('load', function () {\n                        var canvas = void 0,\n                            ctx = void 0;\n\n                        var _expectSize = _this.expectSize(image),\n                            width = _expectSize.width,\n                            height = _expectSize.height;\n\n                        canvas = document.createElement(\"canvas\");\n                        ctx = canvas.getContext(\"2d\");\n                        canvas.width = width;\n                        canvas.height = height;\n                        ctx.drawImage(image, 0, 0, width, height);\n\n                        if (orientation != \"\" && orientation != 1) {\n                            switch (orientation) {\n                                case 6:\n                                    //需要顺时针（向左）90度旋转\n                                    Imager.rotateImg(image, 'left', canvas);\n                                    break;\n                                case 8:\n                                    //需要逆时针（向右）90度旋转\n                                    Imager.rotateImg(image, 'right', canvas);\n                                    break;\n                                case 3:\n                                    //需要180度旋转\n                                    Imager.rotateImg(image, 'right', canvas); //转两次\n                                    Imager.rotateImg(image, 'right', canvas);\n                                    break;\n                            }\n                        }\n\n                        resolve(canvas.toDataURL(\"image/png\", quality));\n                    });\n                    image.addEventListener('err', reject);\n                });\n            });\n        }\n    }, {\n        key: 'getExif',\n        value: function getExif() {\n            var _this2 = this;\n\n            return new Promise(function (resolve) {\n                EXIF.getData(_this2.file, function () {\n                    EXIF.getAllTags(_this2.file);\n                    resolve(_this2.file);\n                });\n            });\n        }\n    }], [{\n        key: 'supportFileReader',\n        value: function supportFileReader() {\n            return !!window.FileReader;\n        }\n    }, {\n        key: 'supportFile',\n        value: function supportFile() {\n            return window.File && window.atob && window.Uint8Array;\n        }\n    }, {\n        key: 'isImage',\n        value: function isImage(file) {\n            return file.type.indexOf('image') > -1;\n        }\n\n        // transfer base64 to file need the methods supportFile\n\n    }, {\n        key: 'base64ToFile',\n        value: function base64ToFile(dataurl, filename) {\n            if (!Imager.supportFile()) {\n                return dataurl;\n            }\n\n            var arr = dataurl.split(','),\n                mime = arr[0].match(/:(.*?);/)[1],\n                bstr = atob(arr[1]),\n                n = bstr.length,\n                u8arr = new Uint8Array(n);\n            while (n--) {\n                u8arr[n] = bstr.charCodeAt(n);\n            }\n            return new File([u8arr], filename, { type: mime });\n        }\n        /**\n         * @params file\n         * @return Promise\n         */\n\n    }, {\n        key: 'fileToBase64',\n        value: function fileToBase64(file) {\n            if (!Imager.supportFileReader()) {\n                return Promise.reject(new Error('browser not support FileReader'));\n            }\n\n            var oReader = new FileReader();\n            oReader.readAsDataURL(file);\n            return new Promise(function (resolve, reject) {\n                oReader.addEventListener('load', function () {\n                    return resolve(oReader.result);\n                });\n                oReader.addEventListener('error', reject);\n            });\n        }\n    }, {\n        key: 'rotateImg',\n        value: function rotateImg(img, direction, canvas) {\n            var min_step = 0;\n            var max_step = 3;\n            if (img == null) return;\n\n            var height = img.height;\n            var width = img.width;\n            var step = 2;\n            if (step == null) {\n                step = min_step;\n            }\n            if (direction == 'right') {\n                step++;\n                step > max_step && (step = min_step);\n            } else {\n                step--;\n                step < min_step && (step = max_step);\n            }\n            var degree = step * 90 * Math.PI / 180;\n            var ctx = canvas.getContext('2d');\n            switch (step) {\n                case 0:\n                    canvas.width = width;\n                    canvas.height = height;\n                    ctx.drawImage(img, 0, 0);\n                    break;\n                case 1:\n                    canvas.width = height;\n                    canvas.height = width;\n                    ctx.rotate(degree);\n                    ctx.drawImage(img, 0, -height);\n                    break;\n                case 2:\n                    canvas.width = width;\n                    canvas.height = height;\n                    ctx.rotate(degree);\n                    ctx.drawImage(img, -width, -height);\n                    break;\n                case 3:\n                    canvas.width = height;\n                    canvas.height = width;\n                    ctx.rotate(degree);\n                    ctx.drawImage(img, -width, 0);\n                    break;\n            }\n        }\n    }]);\n    return Imager;\n}();\n\nreturn Imager;\n\n})));"]}